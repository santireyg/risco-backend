def build_accent_insensitive_regex(query: str) -> str:
    """
    Convierte una cadena en una regex que matchee vocales con y sin tilde, sin importar cómo se escriba la consulta.
    Ejemplo: 'ingenieria' o 'ingeniería' -> 'ing[eéëèê][n][iíïìî][eéëèê][r][iíïìî][aáäàâãå]'
    """
    accent_map = {
        'a': '[aáäàâãå]', 'á': '[aáäàâãå]', 'ä': '[aáäàâãå]', 'à': '[aáäàâãå]', 'â': '[aáäàâãå]', 'ã': '[aáäàâãå]', 'å': '[aáäàâãå]',
        'e': '[eéëèê]', 'é': '[eéëèê]', 'ë': '[eéëèê]', 'è': '[eéëèê]', 'ê': '[eéëèê]',
        'i': '[iíïìî]', 'í': '[iíïìî]', 'ï': '[iíïìî]', 'ì': '[iíïìî]', 'î': '[iíïìî]',
        'o': '[oóöòôõø]', 'ó': '[oóöòôõø]', 'ö': '[oóöòôõø]', 'ò': '[oóöòôõø]', 'ô': '[oóöòôõø]', 'õ': '[oóöòôõø]', 'ø': '[oóöòôõø]',
        'u': '[uúüùû]', 'ú': '[uúüùû]', 'ü': '[uúüùû]', 'ù': '[uúüùû]', 'û': '[uúüùû]',
        'A': '[AÁÄÀÂÃÅ]', 'Á': '[AÁÄÀÂÃÅ]', 'Ä': '[AÁÄÀÂÃÅ]', 'À': '[AÁÄÀÂÃÅ]', 'Â': '[AÁÄÀÂÃÅ]', 'Ã': '[AÁÄÀÂÃÅ]', 'Å': '[AÁÄÀÂÃÅ]',
        'E': '[EÉËÈÊ]', 'É': '[EÉËÈÊ]', 'Ë': '[EÉËÈÊ]', 'È': '[EÉËÈÊ]', 'Ê': '[EÉËÈÊ]',
        'I': '[IÍÏÌÎ]', 'Í': '[IÍÏÌÎ]', 'Ï': '[IÍÏÌÎ]', 'Ì': '[IÍÏÌÎ]', 'Î': '[IÍÏÌÎ]',
        'O': '[OÓÖÒÔÕØ]', 'Ó': '[OÓÖÒÔÕØ]', 'Ö': '[OÓÖÒÔÕØ]', 'Ò': '[OÓÖÒÔÕØ]', 'Ô': '[OÓÖÒÔÕØ]', 'Õ': '[OÓÖÒÔÕØ]', 'Ø': '[OÓÖÒÔÕØ]',
        'U': '[UÚÜÙÛ]', 'Ú': '[UÚÜÙÛ]', 'Ü': '[UÚÜÙÛ]', 'Ù': '[UÚÜÙÛ]', 'Û': '[UÚÜÙÛ]'
    }
    return ''.join(accent_map.get(c, c) for c in query)
